logging:
  level:
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    org.springframework.web.servlet.DispatcherServlet: DEBUG
server:
  port: 8189
  servlet:
    context-path: /
spring:
  flyway:
    enabled: true
    cleanOnValidationError: false
    cleanDisabled: false
    locations: classpath:db/migration
    schemas: master_schema
    baselineOnMigrate: true
    baselineVersion: 1
    validateOnMigrate: true
    outOfOrder: false
  datasource:
    url: jdbc:postgresql://172.20.0.9:5432/hackaton
#    url: jdbc:postgresql://localhost:5432/hackaton
    username: admin
    password: E2#QWDr321c%jiGHDShewfdwe
    driverClassName: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      default-schema: master_schema

  kafka:
    bootstrap-servers: 172.20.0.23:19092,172.20.0.24:19092,172.20.0.25:19092
    properties:
      security.protocol: SASL_PLAINTEXT
      sasl.mechanism: SCRAM-SHA-256
      sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="E3fEGe21e123Fh65jre098ujyh9fewDSGQW315y8hyfe0";

    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.javabruse.DTO"

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all

topics:
  transfer-requests-task: "TASK_REQUEST_TOPIC"
  transfer-response-task: "TASK_RESPONSE_TOPIC"
